name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.17.1"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma client
        run: pnpm ensure-prisma-ci
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Format and lint check
        run: pnpm check

      - name: Build all packages
        run: pnpm build:all
        env:
          CI: true
          NX_TERMINAL_OUTPUT: static
          NX_CLOUD_DISTRIBUTED_EXECUTION: false

      - name: Type check
        run: pnpm check-types
        env:
          CI: true
          NX_TERMINAL_OUTPUT: static
          NX_CLOUD_DISTRIBUTED_EXECUTION: false

      - name: Database migration check
        run: pnpm db:migrate:ci
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          CI: true

      # - name: Run tests
      #   run: pnpm test:ci
      #   env:
      #     DATABASE_URL: postgresql://test:test@localhost:5432/test
      #     DOTENV_PRIVATE_KEY_DEV: ${{ secrets.DOTENV_PRIVATE_KEY_DEV }}
      #     DOTENV_PRIVATE_KEY_TEST: ${{ secrets.DOTENV_PRIVATE_KEY_TEST }}
      #     CI: true
      #     NX_TERMINAL_OUTPUT: static
      #     NX_CLOUD_DISTRIBUTED_EXECUTION: false
